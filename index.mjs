// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number-array@esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-typed-array-like@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-read-only-property@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-t-cdf@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-t-quantile@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-sqrt@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-abs@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-mean@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-variance@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/blas-base-gcopy@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-ninf@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-pinf@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/array-float64@esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import b from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-contains@esm/index.mjs";import w from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@esm/index.mjs";import x from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@esm/index.mjs";import y from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-roundn@esm/index.mjs";var E=f.isPrimitive,T=i,V=v.isPrimitive,O=c,P=g,F=b,k=a,q=["two-sided","less","greater"];var R=function(t,e){if(!T(e))return new TypeError(k("invalid argument. Options argument must be an object. Value: `%s`.",e));if(P(e,"alpha")){if(t.alpha=e.alpha,!E(t.alpha)||O(t.alpha))return new TypeError(k("invalid option. `%s` option must be a number. Option: `%s`.","alpha",t.alpha));if(t.alpha<0||t.alpha>1)return new RangeError(k("invalid option. `%s` option must be between `0` and `1` (inclusive). Option: `%f`.","alpha",t.alpha))}if(P(e,"alternative")){if(t.alternative=e.alternative,!V(t.alternative))return new TypeError(k("invalid option. `%s` option must be a string. Option: `%s`.","alternative",t.alternative));if(!F(q,t.alternative))return new Error(k("invalid option. `%s` option must be one of the following: `%s`.","alternative",q.join(", ")))}return P(e,"mu")&&(t.mu=e.mu,!E(t.mu)||O(t.mu))?new TypeError(k("invalid option. `%s` option must be a number. Option: `%s`.","mu",t.mu)):null},S=w,A=i,D=x.isPrimitive,z=g,B=y,C=a;var G=function(t){var e,s,i;if(s=4,e=!0,arguments.length>0){if(!A(t))throw new TypeError(C("invalid argument. First argument must be an options object. Value: `%s`.",t));if(z(t,"digits")){if(!S(t.digits))throw new TypeError(C("invalid option. `%s` option must be a positive integer. Option: `%s`.","digits",t.digits));s=t.digits}if(z(t,"decision")){if(!D(t.decision))throw new TypeError(C("invalid option. `%s` option must be a boolean. Option: `%s`.","decision",t.decision));e=t.decision}}switch(i="",i+=this.method,i+="\n\n",i+="Alternative hypothesis: ","Paired t-test"===this.method?i+="True difference in means is ":i+="True mean is ",this.alternative){case"two-sided":default:i+="not equal to ";break;case"less":i+="less than ";break;case"greater":i+="greater than "}return i+=this.nullValue,i+="\n\n",i+="    pValue: "+B(this.pValue,-s)+"\n",i+="    statistic: "+B(this.statistic,-s)+"\n",i+="    df: "+this.df+"\n",i+="    "+100*(1-this.alpha)+"% confidence interval: ["+B(this.ci[0],-s)+","+B(this.ci[1],-s)+"]",i+="\n\n",e&&(i+="Test Decision: ",this.rejected?i+="Reject null in favor of alternative at "+100*this.alpha+"% significance level":i+="Fail to reject null in favor of alternative at "+100*this.alpha+"% significance level",i+="\n"),i},H=t.primitives,I=e,J=s,K=i,L=n,M=r,N=a,Q=o,U=m,W=l,X=d,Y=p,Z=h,$=u,_=j,tt=R,et=G;var st=function(t){var e,s,i,n,r,a,o,m,l,d,p,h,u;if(!I(t)&&!H(t))throw new TypeError(N("invalid argument. First argument must be a numeric array. Value: `%s`.",t));if((m=t.length)<2)throw new Error(N("invalid argument. First argument must have at least two elements. Value: `%s`.",t));if(r={mu:0,alpha:.05,alternative:"two-sided"},2===arguments.length){if(K(arguments[1])){if(o=tt(r,arguments[1]))throw o}else if(!I(h=arguments[1])&&!H(h))throw new TypeError(N("invalid argument. Second argument must be either a numeric array or an options object. Value: `%s`.",h))}else if(arguments.length>2){if(!I(h=arguments[1])&&!H(h))throw new TypeError(N("invalid argument. Second argument must be a numeric array. Value: `%s`.",h));if(o=tt(r,arguments[2]))throw o}if(h){if(h.length!==m)throw new Error("invalid arguments. The first and second arguments must have the same length.");for(t=Y(m,t,1,new _(m),1),u=0;u<m;u++)t[u]-=h[u]}return e=Q(X(m,1,t,1)/m),a=((s=W(m,t,1))-r.mu)/e,d=m-1,"two-sided"===r.alternative?(n=2*L(-U(a),d),p=M(1-r.alpha/2,d),i=[r.mu+(a-p)*e,r.mu+(a+p)*e]):"greater"===r.alternative?(n=1-L(a,d),p=M(1-r.alpha,d),i=[r.mu+(a-p)*e,$]):(n=L(a,d),p=M(1-r.alpha,d),i=[Z,r.mu+(a+p)*e]),J(l={},"rejected",n<=r.alpha),J(l,"alpha",r.alpha),J(l,"pValue",n),J(l,"statistic",a),J(l,"ci",i),J(l,"df",d),J(l,"nullValue",r.mu),J(l,"mean",s),J(l,"sd",e),J(l,"alternative",r.alternative),J(l,"method",h?"Paired t-test":"One-sample t-test"),J(l,"print",et),l};export{st as default};
//# sourceMappingURL=index.mjs.map
