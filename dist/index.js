"use strict";var q=function(e,a){return function(){return a||e((a={exports:{}}).exports,a),a.exports}};var A=q(function(ie,P){"use strict";var V=require("@stdlib/assert-is-number").isPrimitive,L=require("@stdlib/assert-is-plain-object"),B=require("@stdlib/assert-is-string").isPrimitive,j=require("@stdlib/math-base-assert-is-nan"),w=require("@stdlib/assert-has-own-property"),C=require("@stdlib/assert-contains"),d=require("@stdlib/string-format"),F=["two-sided","less","greater"];function Q(e,a){if(!L(a))return new TypeError(d("invalid argument. Options argument must be an object. Value: `%s`.",a));if(w(a,"alpha")){if(e.alpha=a.alpha,!V(e.alpha)||j(e.alpha))return new TypeError(d("invalid option. `%s` option must be a number. Option: `%s`.","alpha",e.alpha));if(e.alpha<0||e.alpha>1)return new RangeError(d("invalid option. `%s` option must be a number on the interval: [0, 1]. Option: `%f`.","alpha",e.alpha))}if(w(a,"alternative")){if(e.alternative=a.alternative,!B(e.alternative))return new TypeError(d("invalid option. `%s` option must be a string. Option: `%s`.","alternative",e.alternative));if(!C(F,e.alternative))return new Error(d('invalid option. `%s` option must be one of the following: "%s". Option: `%s`.',"alternative",F.join('", "'),e.alternative))}return w(a,"mu")&&(e.mu=a.mu,!V(e.mu)||j(e.mu))?new TypeError(d("invalid option. `%s` option must be a number. Option: `%s`.","mu",e.mu)):null}P.exports=Q});var I=q(function(te,k){"use strict";var z=require("@stdlib/assert-is-positive-integer"),G=require("@stdlib/assert-is-plain-object"),H=require("@stdlib/assert-is-boolean").isPrimitive,N=require("@stdlib/assert-has-own-property"),g=require("@stdlib/math-base-special-roundn"),b=require("@stdlib/string-format");function J(e){var a,s,r;if(s=4,a=!0,arguments.length>0){if(!G(e))throw new TypeError(b("invalid argument. First argument must be an object. Value: `%s`.",e));if(N(e,"digits")){if(!z(e.digits))throw new TypeError(b("invalid option. `%s` option must be a positive integer. Option: `%s`.","digits",e.digits));s=e.digits}if(N(e,"decision")){if(!H(e.decision))throw new TypeError(b("invalid option. `%s` option must be a boolean. Option: `%s`.","decision",e.decision));a=e.decision}}switch(r="",r+=this.method,r+="\n\n",r+="Alternative hypothesis: ",this.method==="Paired t-test"?r+="True difference in means is ":r+="True mean is ",this.alternative){case"less":r+="less than ";break;case"greater":r+="greater than ";break;case"two-sided":default:r+="not equal to ";break}return r+=this.nullValue,r+="\n\n",r+="    pValue: "+g(this.pValue,-s)+"\n",r+="    statistic: "+g(this.statistic,-s)+"\n",r+="    df: "+this.df+"\n",r+="    "+(1-this.alpha)*100+"% confidence interval: ["+g(this.ci[0],-s)+","+g(this.ci[1],-s)+"]",r+="\n\n",a&&(r+="Test Decision: ",this.rejected?r+="Reject null in favor of alternative at "+this.alpha*100+"% significance level":r+="Fail to reject null in favor of alternative at "+this.alpha*100+"% significance level",r+="\n"),r}k.exports=J});var D=q(function(ne,S){"use strict";var y=require("@stdlib/assert-is-number-array").primitives,E=require("@stdlib/assert-is-typed-array-like"),u=require("@stdlib/utils-define-read-only-property"),K=require("@stdlib/assert-is-plain-object"),T=require("@stdlib/stats-base-dists-t-cdf"),O=require("@stdlib/stats-base-dists-t-quantile"),p=require("@stdlib/string-format"),M=require("@stdlib/math-base-special-sqrt"),U=require("@stdlib/math-base-special-abs"),W=require("@stdlib/stats-strided-mean"),X=require("@stdlib/stats-strided-variance"),Y=require("@stdlib/blas-base-gcopy"),Z=require("@stdlib/constants-float64-ninf"),_=require("@stdlib/constants-float64-pinf"),$=require("@stdlib/array-float64"),R=A(),x=I();function ee(e){var a,s,r,f,i,v,h,l,t,o,m,n,c;if(!E(e)&&!y(e))throw new TypeError(p("invalid argument. First argument must be a numeric array. Value: `%s`.",e));if(l=e.length,l<2)throw new Error(p("invalid argument. First argument must contain at least two elements. Value: `%s`.",e));if(i={mu:0,alpha:.05,alternative:"two-sided"},arguments.length===2){if(K(arguments[1])){if(h=R(i,arguments[1]),h)throw h}else if(n=arguments[1],!E(n)&&!y(n))throw new TypeError(p("invalid argument. Second argument must be either a numeric array or an options object. Value: `%s`.",n))}else if(arguments.length>2){if(n=arguments[1],!E(n)&&!y(n))throw new TypeError(p("invalid argument. Second argument must be a numeric array. Value: `%s`.",n));if(h=R(i,arguments[2]),h)throw h}if(n){if(n.length!==l)throw new Error("invalid arguments. First and second arguments must have the same length.");for(e=Y(l,e,1,new $(l),1),c=0;c<l;c++)e[c]-=n[c]}return a=M(X(l,1,e,1)/l),s=W(l,e,1),v=(s-i.mu)/a,o=l-1,i.alternative==="two-sided"?(f=2*T(-U(v),o),m=O(1-i.alpha/2,o),r=[i.mu+(v-m)*a,i.mu+(v+m)*a]):i.alternative==="greater"?(f=1-T(v,o),m=O(1-i.alpha,o),r=[i.mu+(v-m)*a,_]):(f=T(v,o),m=O(1-i.alpha,o),r=[Z,i.mu+(v+m)*a]),t={},u(t,"rejected",f<=i.alpha),u(t,"alpha",i.alpha),u(t,"pValue",f),u(t,"statistic",v),u(t,"ci",r),u(t,"df",o),u(t,"nullValue",i.mu),u(t,"mean",s),u(t,"sd",a),u(t,"alternative",i.alternative),u(t,"method",n?"Paired t-test":"One-sample t-test"),u(t,"print",x),t}S.exports=ee});var re=D();module.exports=re;
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
//# sourceMappingURL=index.js.map
